services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: annahwi-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-annahwi}
      POSTGRES_USER: ${POSTGRES_USER:-annahwi_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-annahwi_user} -d ${POSTGRES_DB:-annahwi}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend - Quarkus Application
  backend:
    build:
      context: ./backend
      dockerfile: src/main/docker/Dockerfile.jvm
    container_name: annahwi-backend
    environment:
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-your_anthropic_api_key}
      QUARKUS_PROFILE: ${QUARKUS_PROFILE:-prod}
      QUARKUS_NATIVE_ENABLED: false
      QUARKUS_HTTP_PORT: ${QUARKUS_HTTP_PORT:-8080}
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-annahwi}
      QUARKUS_DATASOURCE_USERNAME: ${POSTGRES_USER:-annahwi_user}
      QUARKUS_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Frontend - Nuxt.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: annahwi-frontend
    environment:
      API_BASE_URL: ${API_BASE_URL:-http://localhost:8080/api/v1}
      NUXT_PUBLIC_API_BASE_URL: ${API_BASE_URL:-http://localhost:8080/api/v1}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

  # --- Monitoring stack ---
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8081:8080"
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - cadvisor
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/graphana/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/graphana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    restart: unless-stopped

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER:-annahwi_user}:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/${POSTGRES_DB:-annahwi}?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
    name: annahwi-postgres-data
  grafana_data:
    name: annahwi-grafana-data
