services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: annahwi-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-annahwi}
      POSTGRES_USER: ${POSTGRES_USER:-annahwi_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-annahwi_user} -d ${POSTGRES_DB:-annahwi}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend - Quarkus Application
  backend:
    build:
      context: ./backend
      dockerfile: src/main/docker/Dockerfile.jvm
    container_name: annahwi-backend
    environment:
      QUARKUS_PROFILE: ${QUARKUS_PROFILE:-dev}
      QUARKUS_HTTP_PORT: ${QUARKUS_HTTP_PORT:-8080}
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-annahwi}
      QUARKUS_DATASOURCE_USERNAME: ${POSTGRES_USER:-annahwi_user}
      QUARKUS_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Frontend - Nuxt.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: annahwi-frontend
    environment:
      API_BASE_URL: ${API_BASE_URL:-http://localhost:8080/api/v1}
      NUXT_PUBLIC_API_BASE_URL: ${API_BASE_URL:-http://backend:8080/api/v1}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    name: annahwi-postgres-data
